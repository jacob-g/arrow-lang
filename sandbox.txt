function 
/--> int squareRoot(int x)
| int candidate
| candidate = 0
| /-->
| | candidate = candidate + 1
| \--< candidate * candidate < x
^ candidate

function
/--> bool isPrime(int x)
| bool result
| result = true
| /--< x < 3
| | int factor
| | int ceiling
| | ceiling = squareRoot(x)
| | factor = 2
| | /-->
| | | /--< x % factor != 0
| | | | result = false //if the factor divides 
| | | \-->
| | | factor = factor + 1
| | \--< factor < ceiling and result //bail out as soon as we see a factor
| \-->
^ result

function
/--> bool negate(bool x)
| bool result
| result = false
| /--< x
| | result = true
| \-->
^ result

main
bool result
result = isPrime(8)